{"ast":null,"code":"var _jsxFileName = \"/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Arrows.js\";\nimport React, { Component } from \"react\";\nexport default class Arrows extends Component {\n  componentDidMount() {\n    console.log(this.props.soundKnots);\n    setTimeout(function () {\n      var arrows = document.querySelectorAll(\".arrow\");\n      document.querySelector(\"body\").addEventListener(\"mousemove\", function (event) {\n        arrows.forEach(arrow => {\n          var arrowRects = arrow.getBoundingClientRect();\n          var arrowX = arrowRects.left + arrowRects.width / 2;\n          var arrowY = arrowRects.top + arrowRects.height / 2;\n          arrow.style.transform = \"rotate(\" + Math.atan2(event.clientY - arrowY, event.clientX - arrowX) + \"rad)\";\n        });\n      });\n    }, 1);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      id: \"box\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      class: \"arrow arrow1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"----->\"), React.createElement(\"div\", {\n      class: \"arrow arrow2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, \"----->\"), React.createElement(\"div\", {\n      class: \"arrow arrow3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"----->\"), React.createElement(\"div\", {\n      class: \"arrow arrow4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, \"----->\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Arrows.js"],"names":["React","Component","Arrows","componentDidMount","console","log","props","soundKnots","setTimeout","arrows","document","querySelectorAll","querySelector","addEventListener","event","forEach","arrow","arrowRects","getBoundingClientRect","arrowX","left","width","arrowY","top","height","style","transform","Math","atan2","clientY","clientX","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,eAAe,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAC5CE,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWC,UAAvB;AACAC,IAAAA,UAAU,CAAC,YAAW;AACpB,UAAIC,MAAM,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,QAA1B,CAAb;AAEAD,MAAAA,QAAQ,CACLE,aADH,CACiB,MADjB,EAEGC,gBAFH,CAEoB,WAFpB,EAEiC,UAASC,KAAT,EAAgB;AAC7CL,QAAAA,MAAM,CAACM,OAAP,CAAeC,KAAK,IAAI;AACtB,cAAIC,UAAU,GAAGD,KAAK,CAACE,qBAAN,EAAjB;AACA,cAAIC,MAAM,GAAGF,UAAU,CAACG,IAAX,GAAkBH,UAAU,CAACI,KAAX,GAAmB,CAAlD;AACA,cAAIC,MAAM,GAAGL,UAAU,CAACM,GAAX,GAAiBN,UAAU,CAACO,MAAX,GAAoB,CAAlD;AACAR,UAAAA,KAAK,CAACS,KAAN,CAAYC,SAAZ,GACE,YACAC,IAAI,CAACC,KAAL,CAAWd,KAAK,CAACe,OAAN,GAAgBP,MAA3B,EAAmCR,KAAK,CAACgB,OAAN,GAAgBX,MAAnD,CADA,GAEA,MAHF;AAID,SARD;AASD,OAZH;AAaD,KAhBS,EAgBP,CAhBO,CAAV;AAiBD;;AAEDY,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAK,MAAA,KAAK,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,CADF;AAQD;;AA/B2C","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Arrows extends Component {\n  componentDidMount() {\n    console.log(this.props.soundKnots);\n    setTimeout(function() {\n      var arrows = document.querySelectorAll(\".arrow\");\n\n      document\n        .querySelector(\"body\")\n        .addEventListener(\"mousemove\", function(event) {\n          arrows.forEach(arrow => {\n            var arrowRects = arrow.getBoundingClientRect();\n            var arrowX = arrowRects.left + arrowRects.width / 2;\n            var arrowY = arrowRects.top + arrowRects.height / 2;\n            arrow.style.transform =\n              \"rotate(\" +\n              Math.atan2(event.clientY - arrowY, event.clientX - arrowX) +\n              \"rad)\";\n          });\n        });\n    }, 1);\n  }\n\n  render() {\n    return (\n      <div id=\"box\">\n        <div class=\"arrow arrow1\">-----></div>\n        <div class=\"arrow arrow2\">-----></div>\n        <div class=\"arrow arrow3\">-----></div>\n        <div class=\"arrow arrow4\">-----></div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}