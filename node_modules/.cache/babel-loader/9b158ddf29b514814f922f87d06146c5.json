{"ast":null,"code":"var _jsxFileName = \"/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Stars.js\";\nimport React, { Component } from \"react\";\nimport Starback from \"./Starback\";\nimport thesis from \"../thesiscomponents\";\nimport { Link } from \"react-router-dom\";\nlet count = 0;\nexport default class Stars extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      projects: thesis\n    };\n  }\n\n  mousover() {\n    count += 1;\n\n    if (count === 3) {\n      alert(\"HIIII\");\n    }\n  }\n\n  render() {\n    const myProjects = this.state.projects;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"gridmaincontainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"b1 \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), myProjects.map(eachProject => {\n      return React.createElement(\"a\", {\n        mousover: this.state.mousover,\n        href: \"http://www.google.com\",\n        target: \"blank\",\n        className: \"box\",\n        key: eachProject.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, eachProject.name, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), eachProject.year, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), eachProject.type, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), eachProject.author);\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Stars.js"],"names":["React","Component","Starback","thesis","Link","count","Stars","state","projects","mousover","alert","render","myProjects","map","eachProject","id","name","year","type","author"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,IAAIC,KAAK,GAAG,CAAZ;AAEA,eAAe,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAAA;AAAA;AAAA,SAC3CM,KAD2C,GACnC;AACNC,MAAAA,QAAQ,EAAEL;AADJ,KADmC;AAAA;;AAK3CM,EAAAA,QAAQ,GAAG;AACTJ,IAAAA,KAAK,IAAI,CAAT;;AAEA,QAAIA,KAAK,KAAK,CAAd,EAAiB;AACfK,MAAAA,KAAK,CAAC,OAAD,CAAL;AACD;AACF;;AACDC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,KAAKL,KAAL,CAAWC,QAA9B;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAGGI,UAAU,CAACC,GAAX,CAAeC,WAAW,IAAI;AAC7B,aACE;AACE,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QADvB;AAEE,QAAA,IAAI,EAAC,uBAFP;AAGE,QAAA,MAAM,EAAC,OAHT;AAIE,QAAA,SAAS,EAAC,KAJZ;AAKE,QAAA,GAAG,EAAEK,WAAW,CAACC,EALnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOGD,WAAW,CAACE,IAPf,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARF,EAUGF,WAAW,CAACG,IAVf,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXF,EAYGH,WAAW,CAACI,IAZf,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAbF,EAcGJ,WAAW,CAACK,MAdf,CADF;AAkBD,KAnBA,CAHH,CADF,CADF;AA4BD;;AA3C0C","sourcesContent":["import React, { Component } from \"react\";\nimport Starback from \"./Starback\";\nimport thesis from \"../thesiscomponents\";\nimport { Link } from \"react-router-dom\";\nlet count = 0;\n\nexport default class Stars extends Component {\n  state = {\n    projects: thesis\n  };\n\n  mousover() {\n    count += 1;\n\n    if (count === 3) {\n      alert(\"HIIII\");\n    }\n  }\n  render() {\n    const myProjects = this.state.projects;\n\n    return (\n      <div>\n        <div className=\"gridmaincontainer\">\n          <div className=\"b1 \"></div>\n\n          {myProjects.map(eachProject => {\n            return (\n              <a\n                mousover={this.state.mousover}\n                href=\"http://www.google.com\"\n                target=\"blank\"\n                className=\"box\"\n                key={eachProject.id}\n              >\n                {eachProject.name}\n                <br />\n\n                {eachProject.year}\n                <br />\n                {eachProject.type}\n                <br />\n                {eachProject.author}\n              </a>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}