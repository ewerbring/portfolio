{"ast":null,"code":"var _jsxFileName = \"/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Draggable.js\";\nimport React, { Component } from \"react\";\nimport ResizableRect from \"react-resizable-rotatable-draggable\";\n\nclass Drag extends Component {\n  constructor() {\n    super();\n\n    this.handleResize = (style, isShiftKey, type) => {\n      // type is a string and it shows which resize-handler you clicked\n      // e.g. if you clicked top-right handler, then type is 'tr'\n      let top = style.top,\n          left = style.left,\n          width = style.width,\n          height = style.height;\n      top = Math.round(top);\n      left = Math.round(left);\n      width = Math.round(width);\n      height = Math.round(height);\n      this.setState({\n        top,\n        left,\n        width,\n        height\n      });\n    };\n\n    this.handleRotate = rotateAngle => {\n      this.setState({\n        rotateAngle\n      });\n    };\n\n    this.handleDrag = (deltaX, deltaY) => {\n      this.setState({\n        left: this.state.left + deltaX,\n        top: this.state.top + deltaY\n      });\n    };\n\n    this.state = {\n      width: 100,\n      height: 100,\n      top: 100,\n      left: 100,\n      rotateAngle: 0\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          width = _this$state.width,\n          top = _this$state.top,\n          left = _this$state.left,\n          height = _this$state.height,\n          rotateAngle = _this$state.rotateAngle;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(ResizableRect, {\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      rotateAngle: rotateAngle // aspectRatio={false}\n      // minWidth={10}\n      // minHeight={10}\n      ,\n      zoomable: \"n, w, s, e, nw, ne, se, sw\" // rotatable={true}\n      // onRotateStart={this.handleRotateStart}\n      ,\n      onRotate: this.handleRotate // onRotateEnd={this.handleRotateEnd}\n      // onResizeStart={this.handleResizeStart}\n      ,\n      onResize: this.handleResize // onResizeEnd={this.handleUp}\n      // onDragStart={this.handleDragStart}\n      ,\n      onDrag: this.handleDrag // onDragEnd={this.handleDragEnd}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Drag;","map":{"version":3,"sources":["/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Draggable.js"],"names":["React","Component","ResizableRect","Drag","constructor","handleResize","style","isShiftKey","type","top","left","width","height","Math","round","setState","handleRotate","rotateAngle","handleDrag","deltaX","deltaY","state","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,qCAA1B;;AAEA,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAC3BG,EAAAA,WAAW,GAAG;AACZ;;AADY,SAWdC,YAXc,GAWC,CAACC,KAAD,EAAQC,UAAR,EAAoBC,IAApB,KAA6B;AAC1C;AACA;AAF0C,UAGpCC,GAHoC,GAGPH,KAHO,CAGpCG,GAHoC;AAAA,UAG/BC,IAH+B,GAGPJ,KAHO,CAG/BI,IAH+B;AAAA,UAGzBC,KAHyB,GAGPL,KAHO,CAGzBK,KAHyB;AAAA,UAGlBC,MAHkB,GAGPN,KAHO,CAGlBM,MAHkB;AAI1CH,MAAAA,GAAG,GAAGI,IAAI,CAACC,KAAL,CAAWL,GAAX,CAAN;AACAC,MAAAA,IAAI,GAAGG,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACAC,MAAAA,KAAK,GAAGE,IAAI,CAACC,KAAL,CAAWH,KAAX,CAAR;AACAC,MAAAA,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAT;AACA,WAAKG,QAAL,CAAc;AACZN,QAAAA,GADY;AAEZC,QAAAA,IAFY;AAGZC,QAAAA,KAHY;AAIZC,QAAAA;AAJY,OAAd;AAMD,KAzBa;;AAAA,SA2BdI,YA3Bc,GA2BCC,WAAW,IAAI;AAC5B,WAAKF,QAAL,CAAc;AACZE,QAAAA;AADY,OAAd;AAGD,KA/Ba;;AAAA,SAiCdC,UAjCc,GAiCD,CAACC,MAAD,EAASC,MAAT,KAAoB;AAC/B,WAAKL,QAAL,CAAc;AACZL,QAAAA,IAAI,EAAE,KAAKW,KAAL,CAAWX,IAAX,GAAkBS,MADZ;AAEZV,QAAAA,GAAG,EAAE,KAAKY,KAAL,CAAWZ,GAAX,GAAiBW;AAFV,OAAd;AAID,KAtCa;;AAEZ,SAAKC,KAAL,GAAa;AACXV,MAAAA,KAAK,EAAE,GADI;AAEXC,MAAAA,MAAM,EAAE,GAFG;AAGXH,MAAAA,GAAG,EAAE,GAHM;AAIXC,MAAAA,IAAI,EAAE,GAJK;AAKXO,MAAAA,WAAW,EAAE;AALF,KAAb;AAOD;;AA+BDK,EAAAA,MAAM,GAAG;AAAA,wBAC2C,KAAKD,KADhD;AAAA,UACCV,KADD,eACCA,KADD;AAAA,UACQF,GADR,eACQA,GADR;AAAA,UACaC,IADb,eACaA,IADb;AAAA,UACmBE,MADnB,eACmBA,MADnB;AAAA,UAC2BK,WAD3B,eAC2BA,WAD3B;AAEP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACE,MAAA,IAAI,EAAEP,IADR;AAEE,MAAA,GAAG,EAAED,GAFP;AAGE,MAAA,KAAK,EAAEE,KAHT;AAIE,MAAA,MAAM,EAAEC,MAJV;AAKE,MAAA,WAAW,EAAEK,WALf,CAME;AACA;AACA;AARF;AASE,MAAA,QAAQ,EAAC,4BATX,CAUE;AACA;AAXF;AAYE,MAAA,QAAQ,EAAE,KAAKD,YAZjB,CAaE;AACA;AAdF;AAeE,MAAA,QAAQ,EAAE,KAAKX,YAfjB,CAgBE;AACA;AAjBF;AAkBE,MAAA,MAAM,EAAE,KAAKa,UAlBf,CAmBE;AAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAyBD;;AApE0B;;AAuE7B,eAAef,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ResizableRect from \"react-resizable-rotatable-draggable\";\n\nclass Drag extends Component {\n  constructor() {\n    super();\n    this.state = {\n      width: 100,\n      height: 100,\n      top: 100,\n      left: 100,\n      rotateAngle: 0\n    };\n  }\n\n  handleResize = (style, isShiftKey, type) => {\n    // type is a string and it shows which resize-handler you clicked\n    // e.g. if you clicked top-right handler, then type is 'tr'\n    let { top, left, width, height } = style;\n    top = Math.round(top);\n    left = Math.round(left);\n    width = Math.round(width);\n    height = Math.round(height);\n    this.setState({\n      top,\n      left,\n      width,\n      height\n    });\n  };\n\n  handleRotate = rotateAngle => {\n    this.setState({\n      rotateAngle\n    });\n  };\n\n  handleDrag = (deltaX, deltaY) => {\n    this.setState({\n      left: this.state.left + deltaX,\n      top: this.state.top + deltaY\n    });\n  };\n\n  render() {\n    const { width, top, left, height, rotateAngle } = this.state;\n    return (\n      <div className=\"App\">\n        <ResizableRect\n          left={left}\n          top={top}\n          width={width}\n          height={height}\n          rotateAngle={rotateAngle}\n          // aspectRatio={false}\n          // minWidth={10}\n          // minHeight={10}\n          zoomable=\"n, w, s, e, nw, ne, se, sw\"\n          // rotatable={true}\n          // onRotateStart={this.handleRotateStart}\n          onRotate={this.handleRotate}\n          // onRotateEnd={this.handleRotateEnd}\n          // onResizeStart={this.handleResizeStart}\n          onResize={this.handleResize}\n          // onResizeEnd={this.handleUp}\n          // onDragStart={this.handleDragStart}\n          onDrag={this.handleDrag}\n          // onDragEnd={this.handleDragEnd}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Drag;\n"]},"metadata":{},"sourceType":"module"}