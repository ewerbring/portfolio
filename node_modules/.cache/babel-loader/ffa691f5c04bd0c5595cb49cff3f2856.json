{"ast":null,"code":"var _jsxFileName = \"/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Projects2.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport projects from \"../projects\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"../projects.scss\";\nimport { Player } from \"video-react\";\nimport \"../styles/scss/video-react.scss\"; // or import scss\n\nimport ArchVid from \"../Assets2/Archrenderings/arch2.mp4\";\nlet myProjects;\n\nfunction scroll() {\n  // var imagebox = document.getElementById(\"imagebox\");\n  // imagebox.scrollTop = 0;\n  console.log(\"hajj\");\n}\n\nexport default class Texts extends Component {\n  onClick(event) {\n    this.addSentence1();\n    this.addScrollPos();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      swim: \"swim\",\n      projects: projects\n    };\n    this.swimSwitch = this.swimSwitch.bind(this);\n    this.swimSwitchDeep = this.swimSwitchDeep.bind(this);\n    this.swimSwitchShallow = this.swimSwitchShallow.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      swim: \"both\"\n    });\n  }\n\n  swimSwitch() {\n    this.setState({\n      swim: \"both\"\n    });\n  }\n\n  swimSwitchShallow() {\n    this.setState({\n      swim: \"swim\"\n    });\n  }\n\n  swimSwitchDeep() {\n    this.setState({\n      swim: \"deepdive\"\n    });\n  }\n\n  render() {\n    const myProjects2 = this.state.projects;\n\n    if (this.state.swim !== \"both\") {\n      myProjects = myProjects2.filter(project => project.filter === this.state.swim);\n    } else myProjects = myProjects2;\n\n    console.log();\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectIntro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"introheader\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \"At RISD we have done many projects that takes a little bit of effort to understand. They have some kind of conceptual depth to it. So you would have to choose if you want to just\", \" \", React.createElement(\"i\", {\n      onClick: this.swimSwitchShallow,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"swim\"), \" around on the surface level, or make a \", React.createElement(\"u\", {\n      onClick: this.swimSwitchDeep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \"deep dive\"), \" . Or you can do \", React.createElement(\"i\", {\n      onClick: this.swimSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"both\"), \" at the same time.\", \" \")), \" \", React.createElement(\"div\", {\n      className: \"desktop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, myProjects.map(eachProject => {\n      if (eachProject.type === \"image\") {\n        return React.createElement(\"div\", {\n          className: \"desktopbox\",\n          key: eachProject.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: scroll,\n          className: \"mobiletitle\",\n          to: \"/projects/\".concat(eachProject.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }, React.createElement(ImageGallery, {\n          className: \"imageGallery\",\n          showFullscreenButton: true,\n          showPlayButton: false,\n          showThumbnails: false,\n          slideDuration: \"0\",\n          items: eachProject.imageM,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"textBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"titlebox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, eachProject.name), React.createElement(\"div\", {\n          className: \"descbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, eachProject.description))));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"desktopbox\",\n          key: eachProject.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          onClick: scroll,\n          className: \"mobiletitle\",\n          to: \"/projects/\".concat(eachProject.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }, React.createElement(Player, {\n          playsInline: true,\n          poster: \"/assets/poster.png\",\n          src: eachProject.video,\n          ref: player => {\n            this.player = player;\n          },\n          autoPlay: true,\n          muted: true,\n          loop: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"textBox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"titlebox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124\n          },\n          __self: this\n        }, eachProject.name), React.createElement(\"div\", {\n          className: \"descbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125\n          },\n          __self: this\n        }, eachProject.description))));\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Projects2.js"],"names":["React","Component","Link","projects","ImageGallery","Player","ArchVid","myProjects","scroll","console","log","Texts","onClick","event","addSentence1","addScrollPos","constructor","props","state","swim","swimSwitch","bind","swimSwitchDeep","swimSwitchShallow","componentDidMount","setState","render","myProjects2","filter","project","map","eachProject","type","id","imageM","name","description","video","player"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAO,kBAAP;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAO,iCAAP,C,CAA0C;;AAC1C,OAAOC,OAAP,MAAoB,qCAApB;AACA,IAAIC,UAAJ;;AACA,SAASC,MAAT,GAAkB;AAChB;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;;AAED,eAAe,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAC3CW,EAAAA,OAAO,CAACC,KAAD,EAAQ;AACb,SAAKC,YAAL;AACA,SAAKC,YAAL;AACD;;AAEDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,MADK;AAEXhB,MAAAA,QAAQ,EAAEA;AAFC,KAAb;AAKA,SAAKiB,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACD;;AACDG,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AACZN,MAAAA,IAAI,EAAE;AADM,KAAd;AAGD;;AACDC,EAAAA,UAAU,GAAG;AACX,SAAKK,QAAL,CAAc;AACZN,MAAAA,IAAI,EAAE;AADM,KAAd;AAGD;;AACDI,EAAAA,iBAAiB,GAAG;AAClB,SAAKE,QAAL,CAAc;AACZN,MAAAA,IAAI,EAAE;AADM,KAAd;AAGD;;AACDG,EAAAA,cAAc,GAAG;AACf,SAAKG,QAAL,CAAc;AACZN,MAAAA,IAAI,EAAE;AADM,KAAd;AAGD;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,KAAKT,KAAL,CAAWf,QAA/B;;AAEA,QAAI,KAAKe,KAAL,CAAWC,IAAX,KAAoB,MAAxB,EAAgC;AAC9BZ,MAAAA,UAAU,GAAGoB,WAAW,CAACC,MAAZ,CACXC,OAAO,IAAIA,OAAO,CAACD,MAAR,KAAmB,KAAKV,KAAL,CAAWC,IAD9B,CAAb;AAGD,KAJD,MAIOZ,UAAU,GAAGoB,WAAb;;AACPlB,IAAAA,OAAO,CAACC,GAAR;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6LAG2C,GAH3C,EAIE;AAAG,MAAA,OAAO,EAAE,KAAKa,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,8CAKmB;AAAG,MAAA,OAAO,EAAE,KAAKD,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALnB,uBAMa;AAAG,MAAA,OAAO,EAAE,KAAKF,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANb,wBAMqE,GANrE,CADF,CADF,EAUS,GAVT,EAWE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGb,UAAU,CAACuB,GAAX,CAAeC,WAAW,IAAI;AAC7B,UAAIA,WAAW,CAACC,IAAZ,KAAqB,OAAzB,EAAkC;AAChC,eACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAED,WAAW,CAACE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,OAAO,EAAEzB,MADX;AAEE,UAAA,SAAS,EAAC,aAFZ;AAGE,UAAA,EAAE,sBAAeuB,WAAW,CAACE,EAA3B,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,YAAD;AACE,UAAA,SAAS,EAAC,cADZ;AAEE,UAAA,oBAAoB,EAAE,IAFxB;AAGE,UAAA,cAAc,EAAE,KAHlB;AAIE,UAAA,cAAc,EAAE,KAJlB;AAKE,UAAA,aAAa,EAAC,GALhB;AAME,UAAA,KAAK,EAAEF,WAAW,CAACG,MANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAcE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BH,WAAW,CAACI,IAAvC,CADF,EAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BJ,WAAW,CAACK,WAAtC,CAFF,CAdF,CADF,CADF;AAuBD,OAxBD,MAwBO;AACL,eACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEL,WAAW,CAACE,EAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AACE,UAAA,OAAO,EAAEzB,MADX;AAEE,UAAA,SAAS,EAAC,aAFZ;AAGE,UAAA,EAAE,sBAAeuB,WAAW,CAACE,EAA3B,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE,oBAAC,MAAD;AACE,UAAA,WAAW,MADb;AAEE,UAAA,MAAM,EAAC,oBAFT;AAGE,UAAA,GAAG,EAAEF,WAAW,CAACM,KAHnB;AAIE,UAAA,GAAG,EAAEC,MAAM,IAAI;AACb,iBAAKA,MAAL,GAAcA,MAAd;AACD,WANH;AAOE,UAAA,QAAQ,MAPV;AAQE,UAAA,KAAK,MARP;AASE,UAAA,IAAI,MATN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAiBE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BP,WAAW,CAACI,IAAvC,CADF,EAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA0BJ,WAAW,CAACK,WAAtC,CAFF,CAjBF,CADF,CADF;AA0BD;AACF,KArDA,CADH,CAXF,CADF;AAsED;;AAvH0C","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport projects from \"../projects\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"../projects.scss\";\nimport { Player } from \"video-react\";\nimport \"../styles/scss/video-react.scss\"; // or import scss\nimport ArchVid from \"../Assets2/Archrenderings/arch2.mp4\";\nlet myProjects;\nfunction scroll() {\n  // var imagebox = document.getElementById(\"imagebox\");\n  // imagebox.scrollTop = 0;\n  console.log(\"hajj\");\n}\n\nexport default class Texts extends Component {\n  onClick(event) {\n    this.addSentence1();\n    this.addScrollPos();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      swim: \"swim\",\n      projects: projects\n    };\n\n    this.swimSwitch = this.swimSwitch.bind(this);\n    this.swimSwitchDeep = this.swimSwitchDeep.bind(this);\n    this.swimSwitchShallow = this.swimSwitchShallow.bind(this);\n  }\n  componentDidMount() {\n    this.setState({\n      swim: \"both\"\n    });\n  }\n  swimSwitch() {\n    this.setState({\n      swim: \"both\"\n    });\n  }\n  swimSwitchShallow() {\n    this.setState({\n      swim: \"swim\"\n    });\n  }\n  swimSwitchDeep() {\n    this.setState({\n      swim: \"deepdive\"\n    });\n  }\n\n  render() {\n    const myProjects2 = this.state.projects;\n\n    if (this.state.swim !== \"both\") {\n      myProjects = myProjects2.filter(\n        project => project.filter === this.state.swim\n      );\n    } else myProjects = myProjects2;\n    console.log();\n\n    return (\n      <div>\n        <div className=\"projectIntro\">\n          <h1 className=\"introheader\">\n            At RISD we have done many projects that takes a little bit of effort\n            to understand. They have some kind of conceptual depth to it. So you\n            would have to choose if you want to just{\" \"}\n            <i onClick={this.swimSwitchShallow}>swim</i> around on the surface\n            level, or make a <u onClick={this.swimSwitchDeep}>deep dive</u> . Or\n            you can do <i onClick={this.swimSwitch}>both</i> at the same time.{\" \"}\n          </h1>\n        </div>{\" \"}\n        <div className=\"desktop\">\n          {myProjects.map(eachProject => {\n            if (eachProject.type === \"image\") {\n              return (\n                <div className=\"desktopbox\" key={eachProject.id}>\n                  <div\n                    onClick={scroll}\n                    className=\"mobiletitle\"\n                    to={`/projects/${eachProject.id}`}\n                  >\n                    <ImageGallery\n                      className=\"imageGallery\"\n                      showFullscreenButton={true}\n                      showPlayButton={false}\n                      showThumbnails={false}\n                      slideDuration=\"0\"\n                      items={eachProject.imageM}\n                    />\n\n                    <div className=\"textBox\">\n                      <div className=\"titlebox\">{eachProject.name}</div>\n                      <div className=\"descbox\">{eachProject.description}</div>\n                    </div>\n                  </div>\n                </div>\n              );\n            } else {\n              return (\n                <div className=\"desktopbox\" key={eachProject.id}>\n                  <div\n                    onClick={scroll}\n                    className=\"mobiletitle\"\n                    to={`/projects/${eachProject.id}`}\n                  >\n                    <Player\n                      playsInline\n                      poster=\"/assets/poster.png\"\n                      src={eachProject.video}\n                      ref={player => {\n                        this.player = player;\n                      }}\n                      autoPlay\n                      muted\n                      loop\n                    />\n\n                    <div className=\"textBox\">\n                      <div className=\"titlebox\">{eachProject.name}</div>\n                      <div className=\"descbox\">{eachProject.description}</div>\n                    </div>\n                  </div>\n                </div>\n              );\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}