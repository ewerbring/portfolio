{"ast":null,"code":"var _jsxFileName = \"/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Projects2.js\";\nimport React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport projects from \"../projects\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"../projects.scss\";\nimport { Player } from \"video-react\";\nimport \"../styles/scss/video-react.scss\"; // or import scss\n\nimport ArchVid from \"../Assets2/Archrenderings/arch2.mp4\";\n\nfunction scroll() {\n  // var imagebox = document.getElementById(\"imagebox\");\n  // imagebox.scrollTop = 0;\n  console.log(\"hajj\");\n}\n\nexport default class Texts extends Component {\n  onClick(event) {\n    this.addSentence1();\n    this.addScrollPos();\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      swim: \"both\",\n      projects: projects\n    };\n    this.imageCounter = this.imageCounter.bind(this);\n    this.swimSwitch = this.swimSwitch.bind(this);\n    this.swimSwitchDeep = this.swimSwitchDeep.bind(this);\n    this.swimSwitchShallow = this.swimSwitchShallow.bind(this);\n  }\n\n  swimSwitch() {\n    this.setState({\n      swim: \"both\"\n    });\n  }\n\n  swimSwitchShallow() {\n    this.setState({\n      swim: \"shallow\"\n    });\n  }\n\n  swimSwitchDeep() {\n    this.setState({\n      swim: \"deep\"\n    });\n  }\n\n  imageCounter() {\n    let counter = this.state.counter;\n    this.setState({\n      counter: counter + 1\n    });\n    console.log(\"Hjajjjsj\", this.state.counter);\n  }\n\n  render() {\n    const myProjects = this.state.projects;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"projectIntro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      onClick: this.swimSwitchDeep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Swim around or deep dive?\"), React.createElement(\"p\", {\n      onClick: this.swimSwitch,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"Some of the projects doesnt need a lot of explanation. It might just be a poster. But some of the projects needs a bit time to make sense. Here you choose if you want to swim around on the surface level or dive in to it\")), React.createElement(\"div\", {\n      className: \"desktop\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, \" \", myProjects.map(eachProject => {\n      if (this.state.swim !== \"both\") {\n        if (eachProject.type === \"image\") {\n          return React.createElement(\"div\", {\n            className: \"desktopbox\",\n            key: eachProject.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 79\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            onClick: scroll,\n            className: \"mobiletitle\",\n            to: \"/projects/\".concat(eachProject.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 80\n            },\n            __self: this\n          }, React.createElement(ImageGallery, {\n            className: \"imageGallery\",\n            showFullscreenButton: true,\n            showPlayButton: false,\n            showThumbnails: false,\n            slideDuration: \"0\",\n            items: eachProject.imageM,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"textBox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 98\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"titlebox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }, eachProject.name), React.createElement(\"div\", {\n            className: \"descbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, eachProject.description))));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"desktopbox\",\n            key: eachProject.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            onClick: scroll,\n            className: \"mobiletitle\",\n            to: \"/projects/\".concat(eachProject.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108\n            },\n            __self: this\n          }, React.createElement(Player, {\n            playsInline: true,\n            poster: \"/assets/poster.png\",\n            src: eachProject.video,\n            ref: player => {\n              this.player = player;\n            },\n            autoPlay: true,\n            muted: true,\n            loop: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"textBox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 133\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"titlebox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134\n            },\n            __self: this\n          }, eachProject.name), React.createElement(\"div\", {\n            className: \"descbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }, eachProject.description))));\n        }\n      } else if (this.state.swim !== \"deepdive\") {\n        if (eachProject.filter === \"deepdive\") {\n          return React.createElement(\"div\", {\n            className: \"desktopbox\",\n            key: eachProject.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            onClick: scroll,\n            className: \"mobiletitle\",\n            to: \"/projects/\".concat(eachProject.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 145\n            },\n            __self: this\n          }, React.createElement(ImageGallery, {\n            className: \"imageGallery\",\n            showFullscreenButton: true,\n            showPlayButton: false,\n            showThumbnails: false,\n            slideDuration: \"0\",\n            items: eachProject.imageM,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 150\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"textBox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"titlebox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 164\n            },\n            __self: this\n          }, eachProject.name), React.createElement(\"div\", {\n            className: \"descbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }, eachProject.description))));\n        } else {\n          return React.createElement(\"div\", {\n            className: \"desktopbox\",\n            key: eachProject.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 172\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            onClick: scroll,\n            className: \"mobiletitle\",\n            to: \"/projects/\".concat(eachProject.id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 173\n            },\n            __self: this\n          }, React.createElement(Player, {\n            playsInline: true,\n            poster: \"/assets/poster.png\",\n            src: eachProject.video,\n            ref: player => {\n              this.player = player;\n            },\n            autoPlay: true,\n            muted: true,\n            loop: true,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 178\n            },\n            __self: this\n          }), React.createElement(\"div\", {\n            className: \"textBox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 198\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"titlebox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 199\n            },\n            __self: this\n          }, eachProject.name), React.createElement(\"div\", {\n            className: \"descbox\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 200\n            },\n            __self: this\n          }, eachProject.description))));\n        }\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/carl-gustaf/Documents/GitHub/reactlearning/portfoliotut/src/components/Projects2.js"],"names":["React","Component","Link","projects","ImageGallery","Player","ArchVid","scroll","console","log","Texts","onClick","event","addSentence1","addScrollPos","constructor","props","state","swim","imageCounter","bind","swimSwitch","swimSwitchDeep","swimSwitchShallow","setState","counter","render","myProjects","map","eachProject","type","id","imageM","name","description","video","player","filter"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport projects from \"../projects\";\nimport ImageGallery from \"react-image-gallery\";\nimport \"../projects.scss\";\nimport { Player } from \"video-react\";\nimport \"../styles/scss/video-react.scss\"; // or import scss\nimport ArchVid from \"../Assets2/Archrenderings/arch2.mp4\";\n\nfunction scroll() {\n  // var imagebox = document.getElementById(\"imagebox\");\n  // imagebox.scrollTop = 0;\n  console.log(\"hajj\");\n}\n\nexport default class Texts extends Component {\n  onClick(event) {\n    this.addSentence1();\n    this.addScrollPos();\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      swim: \"both\",\n      projects: projects\n    };\n    this.imageCounter = this.imageCounter.bind(this);\n    this.swimSwitch = this.swimSwitch.bind(this);\n    this.swimSwitchDeep = this.swimSwitchDeep.bind(this);\n    this.swimSwitchShallow = this.swimSwitchShallow.bind(this);\n  }\n\n  swimSwitch() {\n    this.setState({\n      swim: \"both\"\n    });\n  }\n  swimSwitchShallow() {\n    this.setState({\n      swim: \"shallow\"\n    });\n  }\n  swimSwitchDeep() {\n    this.setState({\n      swim: \"deep\"\n    });\n  }\n\n  imageCounter() {\n    let counter = this.state.counter;\n    this.setState({\n      counter: counter + 1\n    });\n    console.log(\"Hjajjjsj\", this.state.counter);\n  }\n\n  render() {\n    const myProjects = this.state.projects;\n\n    return (\n      <div>\n        <div className=\"projectIntro\">\n          <h1 onClick={this.swimSwitchDeep}>Swim around or deep dive?</h1>\n          <p onClick={this.swimSwitch}>\n            Some of the projects doesnt need a lot of explanation. It might just\n            be a poster. But some of the projects needs a bit time to make\n            sense. Here you choose if you want to swim around on the surface\n            level or dive in to it\n          </p>\n        </div>\n        <div className=\"desktop\">\n          {\" \"}\n          {myProjects.map(eachProject => {\n            if (this.state.swim !== \"both\") {\n              if (eachProject.type === \"image\") {\n                return (\n                  <div className=\"desktopbox\" key={eachProject.id}>\n                    <div\n                      onClick={scroll}\n                      className=\"mobiletitle\"\n                      to={`/projects/${eachProject.id}`}\n                    >\n                      <ImageGallery\n                        className=\"imageGallery\"\n                        showFullscreenButton={true}\n                        showPlayButton={false}\n                        showThumbnails={false}\n                        slideDuration=\"0\"\n                        items={eachProject.imageM}\n                      />\n                      {/* <img\n                    className=\"mobileHero\"\n                    src={eachProject.image[0]}\n                    alt=\"haj\"\n                  /> */}\n                      <div className=\"textBox\">\n                        <div className=\"titlebox\">{eachProject.name}</div>\n                        <div className=\"descbox\">{eachProject.description}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              } else {\n                return (\n                  <div className=\"desktopbox\" key={eachProject.id}>\n                    <div\n                      onClick={scroll}\n                      className=\"mobiletitle\"\n                      to={`/projects/${eachProject.id}`}\n                    >\n                      <Player\n                        playsInline\n                        poster=\"/assets/poster.png\"\n                        src={eachProject.video}\n                        ref={player => {\n                          this.player = player;\n                        }}\n                        autoPlay\n                        muted\n                        loop\n                      />\n                      {/* <iframe\n                      src={eachProject.video}\n                      width=\"100%\"\n                      height=\"264\"\n                      frameborder=\"0\"\n                      allow=\"autoplay; fullscreen\"\n                      allowfullscreen\n                    ></iframe> */}\n\n                      <div className=\"textBox\">\n                        <div className=\"titlebox\">{eachProject.name}</div>\n                        <div className=\"descbox\">{eachProject.description}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n            } else if (this.state.swim !== \"deepdive\") {\n              if (eachProject.filter === \"deepdive\") {\n                return (\n                  <div className=\"desktopbox\" key={eachProject.id}>\n                    <div\n                      onClick={scroll}\n                      className=\"mobiletitle\"\n                      to={`/projects/${eachProject.id}`}\n                    >\n                      <ImageGallery\n                        className=\"imageGallery\"\n                        showFullscreenButton={true}\n                        showPlayButton={false}\n                        showThumbnails={false}\n                        slideDuration=\"0\"\n                        items={eachProject.imageM}\n                      />\n                      {/* <img\n                    className=\"mobileHero\"\n                    src={eachProject.image[0]}\n                    alt=\"haj\"\n                  /> */}\n                      <div className=\"textBox\">\n                        <div className=\"titlebox\">{eachProject.name}</div>\n                        <div className=\"descbox\">{eachProject.description}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              } else {\n                return (\n                  <div className=\"desktopbox\" key={eachProject.id}>\n                    <div\n                      onClick={scroll}\n                      className=\"mobiletitle\"\n                      to={`/projects/${eachProject.id}`}\n                    >\n                      <Player\n                        playsInline\n                        poster=\"/assets/poster.png\"\n                        src={eachProject.video}\n                        ref={player => {\n                          this.player = player;\n                        }}\n                        autoPlay\n                        muted\n                        loop\n                      />\n                      {/* <iframe\n                      src={eachProject.video}\n                      width=\"100%\"\n                      height=\"264\"\n                      frameborder=\"0\"\n                      allow=\"autoplay; fullscreen\"\n                      allowfullscreen\n                    ></iframe> */}\n\n                      <div className=\"textBox\">\n                        <div className=\"titlebox\">{eachProject.name}</div>\n                        <div className=\"descbox\">{eachProject.description}</div>\n                      </div>\n                    </div>\n                  </div>\n                );\n              }\n            }\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}